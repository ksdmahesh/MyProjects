<Application x:Class="MiniPro.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml" >
    <Application.Resources>

        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#FFF9F9F9" />
            <Setter Property="FontFamily" Value="Global Serif" />
            <Setter Property="WindowState" Value="Normal" />
            <Setter Property="ShowActivated" Value="True" />
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="DarkBlue" />
        </Style>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Focusable" Value="True" />
            <Setter Property="BorderBrush" Value="DarkBlue"/>
            <Setter Property="Foreground" Value="DarkBlue" />
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="#FFECECEC" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="BorderThickness" Value="2,0,2,0" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Foreground" Value="DarkBlue" />
            <Setter Property="Padding" Value="10" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" >
                        <GradientStop Color="#FFF7F7F7" Offset="0"></GradientStop>
                        <!--<GradientStop Color="Teal" Offset="5"></GradientStop>-->
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="1,0.5" StartPoint="0.5,0" >
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="Teal" Offset="0" />
                                    <GradientStop Color="LightGreen" Offset="4" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gainsboro" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ContextMenu x:Key="contextMenu" >
            <MenuItem Name="Helper" Click="Helper_Click" Header="Help-F1" >
                <MenuItem.Icon>
                    <Image Source="Source\help.png" Width="15" Height="15"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <Style TargetType="{x:Type Image}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Source" Value="Source/Cloud Calculator.png" />
            <Setter Property="ContextMenu" Value="{StaticResource contextMenu}" />
        </Style>

        <SolidColorBrush x:Key="arrow" Color="#FFECECEC" />
        <SolidColorBrush x:Key="arrowOver" Color="#FFB6B6B6" />
        <SolidColorBrush x:Key="arrowDrag" Color="#FF6E6969" />

        <SolidColorBrush x:Key="GridBackground" Color="#FFDE1717" />
        <SolidColorBrush x:Key="DashboardBorderColor" Color="#FFDE1717" />
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="NormalBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#FFDE1717" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                        Name="Border"
                        Margin="0"
                        CornerRadius="0"
                        Background="Transparent"
                        BorderThickness="0">
                            <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Name="RepeatButton"
                            Fill="#999999"
                            Data="{Binding Path=Content,
                                RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsPressed" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RepeatButton" Property="Fill" Value="{DynamicResource ApplicationAccentBrushSecondary}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsPressed" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="RepeatButton" Property="Fill" Value="{DynamicResource ApplicationAccentBrush}" />
                            </MultiTrigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                      Name="Scroller"
                      CornerRadius="0"
                      Margin="0"
                      Background="{StaticResource arrow}"
                      BorderThickness="0" />

                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsDragging" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Scroller" Property="Background" Value="{StaticResource arrowOver}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsDragging" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Scroller" Property="Background" Value="{StaticResource arrowDrag}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
              Grid.RowSpan="3"
              CornerRadius="0"
              Background="Transparent" />

                <RepeatButton
              Grid.Row="0"
              Style="{StaticResource ScrollBarLineButton}"
              Height="18"
              Command="ScrollBar.LineUpCommand"
              Content="M 0,4 L 8,4 L 4,0 Z" />

                <Track
              Name="PART_Track"
              Grid.Row="1"
              IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="5,0,5,0"
                        Background="{StaticResource HorizontalNormalBrush}"
                        BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <RepeatButton
              Grid.Row="3"
              Style="{StaticResource ScrollBarLineButton}"
              Height="18"
              Command="ScrollBar.LineDownCommand"
              Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar"
            TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
            Grid.ColumnSpan="3"
            CornerRadius="0"
            Background="Transparent" />

                <RepeatButton
                Grid.Column="0"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z" />

                <Track
                Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">

                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                    Style="{StaticResource ScrollBarPageButton}"
                    Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                        Style="{StaticResource ScrollBarThumb}"
                        Margin="0,5,0,5"
                        Background="{StaticResource NormalBrush}"
                        BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                        Style="{StaticResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                Grid.Column="3"
                Style="{StaticResource ScrollBarLineButton}"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Name="PART_VerticalScrollBar"
                        Value="{TemplateBinding VerticalOffset}"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                            <ScrollBar Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
